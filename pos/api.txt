# POS System API Routes Documentation

Base URL: `/api` (assuming standard API prefix)

## Authentication Routes (`/auth`)
- `POST /auth/login` - User login (requires validation)
- `POST /auth/refresh` - Refresh authentication token
- `GET /auth/logout` - User logout (requires authentication)
- `GET /auth/profile` - Get user profile (requires authentication)

## Settings Routes (`/settings`)
- `PUT /settings/restaurant` - Edit restaurant details
- `GET /settings/restaurant` - Get restaurant details
- `PUT /settings/system` - Edit system settings
- `GET /settings/system` - Get system settings
- `PUT /settings/bill` - Edit bill settings
- `GET /settings/bill` - Get bill settings

## Tables Routes (`/tables`)
- `POST /tables` - Create a new table
- `PUT /tables/:id` - Update table by ID
- `GET /tables/:id` - Get table by ID
- `GET /tables` - Get all tables
- `DELETE /tables/:id` - Delete table by ID

## Menu Routes (`/menu`)
### Categories
- `POST /menu/categories` - Create menu category
- `PUT /menu/categories/:id` - Update menu category by ID
- `GET /menu/categories/:id` - Get menu category by ID
- `GET /menu/categories` - Get all menu categories
- `DELETE /menu/categories/:id` - Delete menu category by ID

### Items
- `POST /menu/items` - Create menu item
- `PUT /menu/items/:id` - Update menu item by ID
- `GET /menu/items/:id` - Get menu item by ID
- `GET /menu/items` - Get all menu items
- `GET /menu/categories/:categoryId/items` - Get menu items by category
- `DELETE /menu/items/:id` - Delete menu item by ID

## Inventory Routes (`/inventory`)
### Items
- `POST /inventory/items` - Create inventory item
- `PUT /inventory/items/:id` - Update inventory item by ID
- `GET /inventory/items/:id` - Get inventory item by ID
- `GET /inventory/items` - Get all inventory items
- `GET /inventory/items/low-stock` - Get low stock items
- `DELETE /inventory/items/:id` - Delete inventory item by ID

### Stock Movements
- `POST /inventory/movements` - Create stock movement
- `GET /inventory/movements` - Get all stock movements
- `GET /inventory/items/:itemId/movements` - Get stock movements by item

## Parties Routes (`/parties`)
### Parties
- `POST /parties` - Create party
- `PUT /parties/:id` - Update party by ID
- `GET /parties/:id` - Get party by ID
- `GET /parties` - Get all parties
- `GET /parties/type/:type` - Get parties by type
- `GET /parties/active/all` - Get active parties
- `DELETE /parties/:id` - Delete party by ID

### Party Transactions
- `POST /parties/transactions` - Create party transaction
- `PUT /parties/transactions/:id` - Update party transaction by ID
- `GET /parties/transactions/:id` - Get party transaction by ID
- `GET /parties/transactions` - Get all party transactions
- `GET /parties/:partyId/transactions` - Get party transactions by party
- `GET /parties/transactions/type/:type` - Get party transactions by type
- `DELETE /parties/transactions/:id` - Delete party transaction by ID

## Users Routes (`/users`)
- `POST /users` - Create user
- `PUT /users/:id` - Update user by ID
- `GET /users/:id` - Get user by ID
- `GET /users` - Get all users
- `GET /users/role/:role` - Get users by role
- `GET /users/status/active` - Get active users
- `GET /users/username/:username` - Get user by username
- `PUT /users/:id/change-password` - Change user password
- `PATCH /users/:id/toggle-status` - Toggle user status
- `DELETE /users/:id` - Delete user by ID

## User Sessions Routes (`/user-sessions`)
- `POST /user-sessions` - Create user session (requires validation)
- `PUT /user-sessions/:id` - Update user session by ID (requires validation)
- `GET /user-sessions/:id` - Get user session by ID
- `GET /user-sessions` - Get all user sessions
- `GET /user-sessions/user/:userId` - Get user sessions by user ID
- `GET /user-sessions/status/active` - Get active sessions
- `GET /user-sessions/user/:userId/active` - Get active sessions by user
- `GET /user-sessions/date-range` - Get sessions by date range
- `PATCH /user-sessions/:id/end` - End user session
- `PATCH /user-sessions/user/:userId/end-all` - End all active sessions for user
- `DELETE /user-sessions/:id` - Delete user session by ID

## Cart Routes (`/cart`)
### Carts
- `POST /cart` - Create cart
- `PUT /cart/:id` - Update cart by ID
- `GET /cart/:id` - Get cart by ID
- `GET /cart` - Get all carts
- `GET /cart/status/:status` - Get carts by status
- `GET /cart/table/:tableId` - Get carts by table
- `DELETE /cart/:id` - Delete cart by ID
- `DELETE /cart/:cartId/clear` - Clear cart items

### Cart Items
- `POST /cart/items` - Create cart item
- `PUT /cart/items/:id` - Update cart item by ID
- `GET /cart/items/:id` - Get cart item by ID
- `GET /cart/items` - Get all cart items
- `GET /cart/:cartId/items` - Get cart items by cart
- `DELETE /cart/items/:id` - Delete cart item by ID

## Sales Routes (`/sales`)
- `POST /sales` - Create sales record
- `PUT /sales/:id` - Update sales record by ID
- `GET /sales/:id` - Get sales record by ID
- `GET /sales` - Get all sales records
- `GET /sales/order-status/:status` - Get sales by order status
- `GET /sales/payment-status/:status` - Get sales by payment status
- `GET /sales/table/:tableId` - Get sales by table
- `GET /sales/party/:partyId` - Get sales by party
- `DELETE /sales/:id` - Delete sales record by ID

## Sales Items Routes (`/sales-items`)
- `POST /sales-items` - Create sales item
- `PUT /sales-items/:id` - Update sales item by ID
- `GET /sales-items/:id` - Get sales item by ID
- `GET /sales-items` - Get all sales items
- `GET /sales-items/sales/:salesId` - Get sales items by sales ID
- `GET /sales-items/menu-item/:itemId` - Get sales items by menu item ID
- `DELETE /sales-items/:id` - Delete sales item by ID
- `DELETE /sales-items/sales/:salesId/all` - Delete all sales items by sales ID

## Expenses Routes (`/expenses`)
- `POST /expenses` - Create expense
- `PUT /expenses/:id` - Update expense by ID
- `GET /expenses/:id` - Get expense by ID
- `GET /expenses` - Get all expenses
- `GET /expenses/category/:categoryId` - Get expenses by category
- `GET /expenses/party/:partyId` - Get expenses by party
- `GET /expenses/creator/:createdBy` - Get expenses by creator
- `GET /expenses/date-range` - Get expenses by date range
- `GET /expenses/approved/all` - Get approved expenses
- `GET /expenses/pending/all` - Get pending expenses
- `DELETE /expenses/:id` - Delete expense by ID

## Expense Categories Routes (`/expense-categories`)
- `POST /expense-categories` - Create expense category
- `PUT /expense-categories/:id` - Update expense category by ID
- `GET /expense-categories/:id` - Get expense category by ID
- `GET /expense-categories` - Get all expense categories
- `GET /expense-categories/active/all` - Get active expense categories
- `DELETE /expense-categories/:id` - Delete expense category by ID

## Payment Methods Routes (`/payment-methods`)
- `POST /payment-methods` - Create payment method
- `PUT /payment-methods/:id` - Update payment method by ID
- `GET /payment-methods/:id` - Get payment method by ID
- `GET /payment-methods` - Get all payment methods
- `GET /payment-methods/active/all` - Get active payment methods
- `DELETE /payment-methods/:id` - Delete payment method by ID

## Reports Routes (`/reports`)
- `GET /reports` - Returns 501 Not Implemented (Reports functionality not yet implemented)

## Notes:
- Routes marked with "requires authentication" need valid authentication token
- Routes marked with "requires validation" have validation middleware applied
- All routes follow RESTful conventions
- Error handling and response formats are handled by respective controllers
- Some routes may have additional query parameters for filtering and pagination
